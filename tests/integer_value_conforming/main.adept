
#[foreign]
func printf(format ptr<u8>, ...) i32

func main i32 {
    signed()
    unsigned()
    return 0
}

func signed {
    printf(c"============== SIGNED INTEGERS: \n")

    value_i8 i8 = 10
    value_i16 i16 = 10
    value_i32 i32 = 10
    value_i64 i64 = 10
    value_longlong int = 10

    printf(c"-------------- i8 + ...\n")

    value i8 = 0
    value = value + value_i8
    printf(c"value = %hhd\n", value)

    // value i8 = 0
    // value = value + value_i16
    // printf(c"value = %hhd\n", value)

    // value i8 = 0
    // value = value + value_i32
    // printf(c"value = %hhd\n", value)

    // value i8 = 0
    // value = value + value_i64
    // printf(c"value = %hhd\n", value)

    // value i8 = 0
    // value = value + value_longlong
    // printf(c"value = %hhd\n", value)

    // value i8 = 0
    // value = value + value_longlong
    // printf(c"value = %hhd\n", value)

    printf(c"-------------- i16 + ...\n")
    value i16 = 0
    value = value + value_i8
    printf(c"value = %d\n", value)

    value i16 = 0
    value = value + value_i16
    printf(c"value = %d\n", value)

    // value i16 = 0
    // value = value + value_i32
    // printf(c"value = %hd\n", value)

    // value i16 = 0
    // value = value + value_i64
    // printf(c"value = %hd\n", value)

    // value i16 = 0
    // value = value + value_longlong
    // printf(c"value = %hd\n", value)

    printf(c"-------------- i32 + ...\n")

    value i32 = 0
    value = value + value_i8
    printf(c"value = %d\n", value)

    value i32 = 0
    value = value + value_i16
    printf(c"value = %d\n", value)

    value i32 = 0
    value = value + value_i32
    printf(c"value = %d\n", value)

    // value i32 = 0
    // value = value + value_i64
    // printf(c"value = %d\n", value)

    // value i32 = 0
    // value = value + value_longlong
    // printf(c"value = %d\n", value)

    printf(c"-------------- i64 + ...\n")

    value i64 = 0
    value = value + value_i8
    printf(c"value = %lld\n", value)

    value i64 = 0
    value = value + value_i16
    printf(c"value = %lld\n", value)

    value i64 = 0
    value = value + value_i32
    printf(c"value = %lld\n", value)

    value i64 = 0
    value = value + value_i64
    printf(c"value = %lld\n", value)

    // value i64 = 0
    // value = value + value_longlong
    // printf(c"value = %lld\n", value)

    printf(c"-------------- int + ...\n")

    value longlong = 0
    value = value + value_i8
    printf(c"value = %lld\n", value)

    value longlong = 0
    value = value + value_i16
    printf(c"value = %lld\n", value)

    value longlong = 0
    value = value + value_i32
    printf(c"value = %lld\n", value)

    value longlong = 0
    value = value + value_i64
    printf(c"value = %lld\n", value)

    value longlong = 0
    value = value + value_longlong
    printf(c"value = %lld\n", value)
}

func unsigned {
    printf(c"============== UNSIGNED INTEGERS: \n")

    value_u8 u8 = 10
    value_u16 u16 = 10
    value_u32 u32 = 10
    value_u64 u64 = 10
    value_ulonglong uint = 10

    printf(c"-------------- u8 + ...\n")

    value u8 = 0
    value = value + value_u8
    printf(c"value = %hhu\n", value)

    // value u8 = 0
    // value = value + value_u16
    // printf(c"value = %hhu\n", value)

    // value u8 = 0
    // value = value + value_u32
    // printf(c"value = %hhu\n", value)

    // value u8 = 0
    // value = value + value_u64
    // printf(c"value = %hhu\n", value)

    // value u8 = 0
    // value = value + value_ulonglong
    // printf(c"value = %hhu\n", value)

    // value u8 = 0
    // value = value + value_ulonglong
    // printf(c"value = %hhu\n", value)

    printf(c"-------------- u16 + ...\n")
    
    value u16 = 0
    value = value + value_u8
    printf(c"value = %hu\n", value)

    value u16 = 0
    value = value + value_u16
    printf(c"value = %hu\n", value)

    // value u16 = 0
    // value = value + value_u32
    // printf(c"value = %hu\n", value)

    // value u16 = 0
    // value = value + value_u64
    // printf(c"value = %hu\n", value)

    // value u16 = 0
    // value = value + value_ulonglong
    // printf(c"value = %hu\n", value)

    printf(c"-------------- u32 + ...\n")

    value u32 = 0
    value = value + value_u8
    printf(c"value = %u\n", value)

    value u32 = 0
    value = value + value_u16
    printf(c"value = %u\n", value)

    value u32 = 0
    value = value + value_u32
    printf(c"value = %u\n", value)

    // value u32 = 0
    // value = value + value_u64
    // printf(c"value = %u\n", value)

    // value u32 = 0
    // value = value + value_ulonglong
    // printf(c"value = %u\n", value)

    printf(c"-------------- u64 + ...\n")

    value u64 = 0
    value = value + value_u8
    printf(c"value = %llu\n", value)

    value u64 = 0
    value = value + value_u16
    printf(c"value = %llu\n", value)

    value u64 = 0
    value = value + value_u32
    printf(c"value = %llu\n", value)

    value u64 = 0
    value = value + value_u64
    printf(c"value = %llu\n", value)

    // value u64 = 0
    // value = value + value_ulonglong
    // printf(c"value = %llu\n", value)

    printf(c"-------------- uint + ...\n")

    value ulonglong = 0
    value = value + value_u8
    printf(c"value = %llu\n", value)

    value ulonglong = 0
    value = value + value_u16
    printf(c"value = %llu\n", value)

    value ulonglong = 0
    value = value + value_u32
    printf(c"value = %llu\n", value)

    value ulonglong = 0
    value = value + value_u64
    printf(c"value = %llu\n", value)

    value ulonglong = 0
    value = value + value_ulonglong
    printf(c"value = %llu\n", value)
}

