
pragma => {
    adept("3.0")
    use("std", import("std"))
    importNamespace("std")
}

#[foreign]
func printf(format ptr'char, ...) int

func main {
    castTest(1234)::(std/castI32ToDouble, std/castI32ToLongLong)
}

#[using std/Cast<i32, double>]
#[using std/Cast<i32, longlong>]
func castTest(x i32) {
    printf(c"With long form generics syntax:\n")
    printf(c"%d %f %lld\n", x, x.cast<double>(), x.cast<longlong>())
    printf(c"With shorthand generics syntax:\n")
    printf(c"%d %f %lld\n", x, x.cast'double(), x.cast'longlong())
}

